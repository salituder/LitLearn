МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ 
РОССИЙСКОЙ ФЕДЕРАЦИИ

РОСТОВСКИЙ ГОСУДАРСТВЕННЫЙ ЭКОНОМИЧЕСКИЙ  
УНИВЕРСИТЕТ (РИНХ)

Факультет Компьютерных технологий и информационной безопасности
	
Кафедра   Информационных технологий и программирования
	


ОТЧЁТ
ПРОИЗВОДСТВЕННАЯ ПРАКТИКА 
(ПРЕДДИПЛОМНАЯ)

База практики: «РГЭУ (РИНХ)»                                          

Выполнил
студент группы ПРИ-341                ________________           И.А. ДРОБОТ
                                                       



Направление 09.03.04  «Программная инженерия»
Профиль 09.03.04.01 "Системное и прикладное программное обеспечение"


   Руководители практики  
          от предприятия    
                   начальник отдела ИТ           _________                        И.О. Фамилия
          от кафедры       
            к.э.н.,,  доцент                              __________                      Е.В. Ефимова



Отчет защищен 10.05.2025     Оценка   ___________________





Ростов-на-Дону, 2025 
СОДЕРЖАНИЕ
ВВЕДЕНИЕ	3
1	ТЕОРЕТИЧЕСКАЯ ЧАСТЬ.	5
1.1	Анализ предметной области и постановка проблемы.	5
1.2	Анализ существующих решений и их сравнительная характеристика.	12
1.3	Обоснование необходимости разработки нового приложения	16
1.4	Анализ и выбор инструментальных средств разработки	19
Заключение	30
Список использованной литературы	31

















 
ВВЕДЕНИЕ                                                                   
Изучение художественной литературы в школьной программе всегда занимало особое место в системе образования. С одной стороны, она способствует развитию навыков анализа художественных текстов, формирует у обучающихся особое отношение к истории преимущественно отечественной литературы, а также активно активизирует воображение, помогающее школьникам не только интерпретировать сюжеты, сопереживать героям, но также и пополнять свой словарный запас. С другой стороны, все чаще, в последние десятилетия, интерес обучающихся именно к этому предмету начал стремительно снижаться, что подтверждается статистикой ВЦИОМ: согласно опросу только около четверти подростков в возрасте 12–18 лет читают книги по собственной инициативе, остальные ограничиваются кратким пересказом произведений или пользуются конспектами из Интернета, что затрудняет полное погружение в художественный текст и, соответственно, препятствует его дальнейшему анализу. Несомненно, необходимо учитывать, что на самих уроках литературы в школе невозможно заниматься только комментированным чтением, поэтому большая часть текстов к прочтению уходит на самостоятельное чтение в качестве домашнего задания. 
В условиях всеобщей цифровизации, когда стремительно меняются привычки потребления информации, классические подходы к преподаванию литературы часто оказываются недостаточно эффективными, поэтому немалое количество педагогов, заинтересованных в привлечении интереса детей к своей дисциплине, часто прибегают к новым методам и приемам обучения. Традиционные формы занятий (фронтальный опрос, пересказ или написание сочинений) становятся все менее мотивирующими для современных школьников — им намного ближе и понятнее формат интерактивных платформ, геймификации, мини-игр и т. д., как это стало привычным в популярных приложениях и социальных сетях.
Учитывая это, становится особенно актуальным поиск новых приемов и средств, которые способны не только удержать внимание ребенка на уроке, но и включить его в самостоятельную работу с текстом. Одной из наиболее перспективных стратегий здесь являются интерактивные веб-приложения с элементами геймификации, когда обучение строится по законам игры: у каждого ученика есть определённый «прогресс», достижения, индивидуальная траектория усвоения материала, а каждая глава книги превращается в своеобразное «приключение», которое доступно для всех людей, имеющих доступ в интернет. Такой подход доказал свою высокую эффективность в зарубежной и российской практике: повышается уровень вовлеченности обучающихся, а результат усвоения материала становится значительно выше.
Актуальность исследования обусловлена не только теоретическим интересом к вопросам цифровизации образовательного процесса, но и реальной потребностью школы в современных средствах преподавания урока литературы. Большинство существующих решений частично решают эту насущную проблему – они предлагают тесты или электронные версии книг, но при этом практически не содержат глубокой геймификации и возможностей для активного вовлечения обучающихся в процесс.
Объектом исследования в данной работе является процесс преподавания и изучения художественной литературы в школе, а предметом – использование интерактивных геймифицированных веб-технологий для повышения мотивации и эффективности в овладении данным школьным предметом.
Целью дипломной работы является разработка подходящей архитектуры и программной реализации веб-приложения с элементами геймификации, ориентированного на обучающихся средней школы для интерактивного изучения литературных произведений в соответствии с российской школьной программой. Для достижения цели поставлены следующие задачи:
1.	Проанализировать текущее состояние и основные проблемы преподавания литературы в общеобразовательных школах;
2.	Оценить существующие цифровые платформы и выявить их ограничения с точки зрения использования игровых методов;
3.	Разработать требования, модель и структуру приложения, которое может интегрироваться в учебный процесс и представлять реальный интерес для современной аудитории.;
4.	Обосновать выбор инструментов программирования;
5.	Реализовать прототип с интеграцией мини-игр на основе глав литературных произведений;
6.	Оценить потенциальную эффективность и практическую значимость разработанной системы.
В методологической основе диплома используются современные педагогические концепции личностно-ориентированного и деятельностного обучения, а также методы анализа и структурирования информационных систем, проектирования UI/UX и внедрения геймификации в образовательные цифровые технологии. В работе используется сравнительный анализ существующих платформ, обобщаются данные исследований мотивации в обучении и также разрабатывается собственный прототип программного обеспечения.
Научная новизна исследования заключается в комплексном подходе к внедрению игровой механики (геймификации) в процесс изучения литературы — от архитектурного проектирования до практической реализации веб-приложения с использованием мини-игр, рейтингов, индивидуального отслеживания прогресса и визуализаций для каждой отдельной книги (или отдельных глав).
Практическая значимость работы определяется тем, что созданная система может быть применена в образовательных организациях любого типа (школах, книжных клубах, центрах дополнительного образования), а также её могут индивидуально использовать обучающиеся и педагогические работники. Кроме того, платформа дает возможность «подружить» классическую литературу с цифровыми привычками современного подростка, что дает реальный шанс повысить интерес к чтению и качественно изменить результаты обучения в лучшую сторону.
Таким образом, представленная работа направлена на решение актуальной задачи современной школы, а именно сделать изучение литературы не только необходимым для аттестации или сдачи ЕГЭ/ ОГЭ/ ГВЭ, но и увлекательным, творческим и индивидуально мотивированным процессом для каждого ученика.

1	ТЕОРЕТИЧЕСКАЯ ЧАСТЬ.

1.1	Анализ предметной области и постановка проблемы.

1.1.1	Роль художественной литературы в школьном образовании.
                                                                  
Преподавание литературы занимает особое положение в образовательной системе школы, так как большая часть художественных текстов к прочтению задается в качестве домашнего задания, а уроки преимущественно рассчитаны на обсуждение и анализ самого произведения. Обучение этому предмету служит не только средством достижения цели обучения языку и развития связной речи, но и чрезвычайно важным инструментом, который способствует формированию ценностных ориентаций, моральных установок, а также эстетических вкусов школьников. Помимо помощи в чтении и анализе литературных произведений, развивает воображение, эмпатию, критическое мышление, способность к самовыражению, а также грамотное участие в дискуссии как с учителем, так и с одноклассниками. В системе общего среднего образования изучение художественной литературы регламентируется требованиями Федерального государственного образовательного стандарта (ФГОС) и Примерной образовательной программы. В этих двух документах определены обязательные для изучения в каждом классе произведения, рекомендованы подходы к анализу литературы. Среди многих важных задач одной из главных является обеспечение в обучении данному предмету формирования культурно-читательской компетентности, самостоятельной мотивированной личности.
По мнению некоторых исследователей, именно уроки литературы воспитывают у обучающихся способность к самоанализу и рефлексии, что в дальнейшем положительно способно отразиться на качестве образования в целом. Произведения таких классиков, как А. С. Пушкин, Н. В. Гоголь, М. Ю. Лермонтов, А. П. Чехов и др., знакомят с различными гранями отечественной культуры, иллюстрируя исторические реалии, а также давая нравственные ориентиры для юных читателей. 

1.1.2	Современные подходы к изучению литературы в школе. Внедрение инновационных технологий в традиционных процесс обучения.

В основном в российских школах используются традиционные методы преподавания предметов, и литература не является исключением. Подобные уроки являются базой в образовательном процессе, но если не интегрировать в устоявшийся, общепринятый, формат нововведения в виде информационных технологий, то подобное обучение способно быстро наскучить как школьникам, так и учителям. Из-за незнания педагогов о возможностях инновационных методов или, возможно, из-за скептического отношения к ним, современные технологии сейчас если и используются, то совсем не часто. В основном их применяют молодые преподаватели, так как они «ближе» к инновациям в сфере IT, а также идут в ногу подрастающим поколениям и знают, что именно может привлечь молодую аудиторию в процессе обучения. 
Так, традиционные методы образовательного процесса базируются на определённые составляющие, которые включают в себя перечень активностей на уроке: анализ самого художественного текста, коллективное обсуждение, устные опросы, письменные пересказы или ответы на вопросы, сочинения-рассуждения и т. д. Про эти способы, несмотря на проверенную временем эффективность, уже можно смело сказать то, что они являются недостаточно мотивирующими для современных школьников, выросших в условиях стремительной цифровизации общества, когда смартфоны и компьютеры с особой активностью вошли в жизнь каждого обучающегося после дистанционного обучения во время изоляции при коронавирусе. В этот период интернет-обучение колоссально продвинуло использование технологий в привычный процесс обучения. 
Инновационные методы ориентированы на активизацию познавательной деятельности каждого из учеников образовательного учреждения, создание интерактивной образовательной среды, позволяющей удовлетворить особый интерес школьников в области IT, развитие навыков критического мышления, а также нельзя не отметить особую роль самостоятельного поиска информации, ведь организация подобной деятельности является неотъемлемой частью обучения (очного или дистанционного). Его целесообразно осуществлять на всех этапах изучения художественного произведения: от усвоения новых знаний до контрольного урока
К современным методам можно отнести следующие составляющие: 
1)	Использование цифровых образовательных платформ и электронных учебников. 
2)	Интеграция мультимедийных средств: видеоуроки, аудиокниги, отрывки из кинофильмов. 
3)	Применение интерактивных презентаций, онлайн-тестирования, форумов и чатов для обсуждения и анализа прочитанного материала.
4)	Внедрение игровых и геймификационных технологий (баллы, рейтинги, достижения, поощрения в виде положительных ометок). 
5)	Организация проектной деятельности и творческих заданий. 
Многие педагогические исследования делают вывод о том, что внедрение цифровых и интерактивных инструментов увеличивает вовлечённость учеников в процесс обучения, способствует развитию самостоятельности, а также помогает улучшить активность мыслительного процесса. Но при всём при этом можно отметить, что подобное масштабное распространение таких технологий тормозится большим количеством сложностей, возникающих по мере их внедрения в школы. 

1.1.3	Проблемы изучения художественной литературы в современной школе 

Если исходить из анализ образовательной практики и открытых данных, то можно выявить следующие основные проблемы, с которыми сталкиваются учителя и ученики при изучении художественной литературы: 
1)	Подростки все чаще поверхностно изучают любые доступные тексты в интернете предпочитая просмотровое или ознакомительное чтение, а глубокое, изучающее прочтение книг «становится все более сложным занятием для многих из них». Согласно данным опроса ВЦИОМ, проведённого в 2022 году среди школьников, лишь 27% подростков читают художественные книги вне школьной программы, а 42% заявляют о снижении интереса к чтению по разным причинам.
2)	Современные школьники испытывают затруднения при анализе и интерпретации литературных текстов XIX — начала XX веков. Причиной тому служит устаревшая лексика, специфической системы ценностей, которые непонятны детям в силу скудным владением историческими сведеньями, а также громоздкого объёма произведений («Война и мир» Л. Н. Толгского, «Тихий Дон» М. А. Шолохова и др.).
3)	Устаревшие методы преподавания. Преобладание репродуктивных методов обучения (запоминание, пересказ, чтение вслух) часто не соответствует образовательным потребностям поколения Z, для которых характерно клиповое мышление, быстрота восприятия информации (так называемый «дешёвый дофамин»), склонность к визуализации.
4)	Отсутствие индивидуального подхода. Мало того, что зачастую классы переполнены учениками и всё труднее становится реализовывать индивидуальный подход к обучению, но к тому же учителя нередко испытывают трудности в выборе и использовании современных цифровых сервисов для изучения литературы, что приводит к единому для всех «шаблонному» способу подачи материала, не учитывая особенности каждого ученика.
5)	Ограниченность времени для глубокого осмысления текста. Школьная программа насыщена классикой, но, к сожалению, не всегда удаётся подробно разобрать художественные произведения, обсудить спорные моменты, совершить литературный анализ. Всё это приводит к внеклассному чтению, а также самостоятельному анализу в виде ответов на вопросы, сочинений или эссе, при выполнении которых дети нередко прибегают к списыванию из интернет-источников.
6)	«Потери» от дистанционного обучения. Переход на дистанционные форматы в период пандемии COVID-19 обострил проблему невовлечённости детей в традиционный образовательный процесс: при удалённом формате снизилась мотивация к чтению и участие в обсуждении литературных тактов.
7)	Из этого мы можем сказать, что всё это приводит к тому, что значительная часть школьников воспринимает уроки литературы как рутину, которую невозможно избежать, формально изучая произведения ради отметки, не стремясь к глубокому постижению художественного мира произведений.




1.1.4	Необходимость внедрения интерактивных и геймифицированных методов.

Изменения в информационной среде, повседневная, стремящаяся к большему развитию, цифровизация и широкое применение мобильных устройств в школьном пространстве предъявляют новые требования к образовательным платформам и подходам. Некоторые исследователи отмечают, что привычная для учителей, детей и их родителей «школьная» подача материала становится скучной и неинтересной для подавляющего числа учеников. 
В таких условиях становится востребованной геймификация образовательного процесса — внедрение игровых элементов в непрофильные (в частности, учебные) формы деятельности с целью повышения мотивации, вовлечённости, формирования особого интереса к предмету. Механики геймификации — это не только баллы и рейтинги, но и различные соревнования, уровни, виртуальные награды, коллективные мини-игры, квесты по литературным произведениям и многое другое.
Так, например, немало педагогических исследований показывают, что использование игровых приёмов увеличивает вовлечённость обучающихся, способствует учебной самостоятельности в учебной деятельности, а также улучшает показатели запоминания материала и даже помогает некоторым школьникам быть более уверенным в себе. Такие подходы, подкреплённые технологическими возможностями, наиболее эффективны для формирования системного восприятия художественного текста и развития умений анализа литературных текстов.

1.1.5 Статистика: уровень читательской активности и мотивации.

Изучив различные исследования, можно сделать много познавательных выводов:
По статистике одного из исследований около 44% обучающихся 7-11 классов намеренно не читают художественную литературу. Они предпочитают «гуглить» краткие пересказы перед уроком.
В целом отмечено снижение спроса на бумажные книги у подростков и рост популярности просмотра кратких пересказов даже на видеохостингах или платформах в формате «короткое видео». При этом логично предполагать, что качество изученного материала не будет держаться на должном уровне.
После проведённого опроса учителей литературы, мы узнали, что в целом дети потеряли интерес к изучению литературы, входящей в школьную программу. Их попытки вернуть интерес чаще всего не увенчивались успехом совсем, а даже если и помогали на определённое время «реанимировать» заинтересованность, то в таком случае педагогу требовалось колоссальное количество времени для того, чтобы придумать что-то поистине увлекательное и трудоёмкое для воплощения (урок-суд, дебаты, урок-КВН и др.).
Но всё же в школах, в которых онлайн-платформы (онлайн-дневник, платформы-опросники, квизы) интегрированы в учебный процесс, процент вовлеченности значительно выше.

Таблица 1.1 – Процент вовлечённости детей в различные методы обучения литературе.
Метод обучения	Процент предпочитающих, %
Обычные уроки и пересказы	32
Интерактивные задания/онлайн	51
Игровые квесты, мини-игры	60
Проектная деятельность	47

В современных реалиях вовлечение геймификации как новый метод «возвращения» интереса детей к литературе становится особенно актуальным.

1.1.6	Формулировка проблемы

Исходя из анализа текущей довольно-таки трудной школьной ситуации в стране, становится очевидным, что одной из главных проблем современного изучения художественной литературы в школе является снижение интереса и вовлечённости обучающихся в учебный процесс. В том числе это связано с преобладанием устаревших методов преподавания, а также недостаточным использованием современных цифровых и геймификационных технологий. И конечно же, вовлечением детей в цифровой мир новых технологий.
Соответственно, главная проблема звучит так:
Снижение интереса школьников и недостаточная результативность изучения художественной литературы, вызванные отсутствием интерактивных и игровых методов в образовательном процессе, что приводит к формальному освоению материала без глубокого понимания и личной заинтересованности.

1.1.6	Характеристика целевой аудитории

Целевая аудитория разрабатываемого приложения — это в первую очередь школьники средних и старших классов в возрасте от 11 до 18 лет, которые проходят курс литературы по действующей образовательной программе. Данный возрастной диапазон выбран не случайно: именно в этот период происходит освоение важной классической литературы, формирование читательского вкуса и развитие аналитических навыков при анализе текста.
Школьники этого возраста, как правило, активно пользуются современными технологиями, они привыкли к интерактивным форматам обучения и имеют высокий уровень цифровой грамотности. Для многих из них привычнее воспринимать информацию через визуализацию, мини-игры и мобильные сервисы, чем через традиционное чтение или подробный комментированный пересказ на уроке.
Помимо самих обучающихся, целевой аудиторией платформы также являются учителя-словесники и родители. Учителя заинтересованы в инструментах, которые способны мотивировать и организовывать учебную деятельность детей, дают обратную связь, а также помогают контролировать прогресс в получении знаний, умений и навыков (ЗУН). Родители в свою очередь нередко сталкиваются с необходимостью мотивировать детей к чтению, мониторить их успехи и участвовать в образовательном процессе.
В условиях большого учебного плана и частой перегруженности, школьникам бывает сложно выделять время на внеурочное чтение, а иногда и найти личный интерес в непростых произведениях классики, которые нередко пугают не только своими объёмами, но и особой сложностью восприятия текста и его визуализации. При этом сама аудитория уже привыкла к современным сервисам, где за активность можно получить понятную награду — уровень, виртуальные «очки» или особый статус в системе. Исследования показывают, что соревновательный элемент или наличие системы «достижений» позволяют заметно повысить самоорганизацию и вовлечённость даже у традиционно менее мотивированных учеников.
Таким образом, выделяя целевую аудиторию этого приложения, важно понимать, что оно рассчитано и на современных школьников с характерными для них стилями восприятия информации, и на преподавателей, ищущих современные методы поддержки учебного процесса. Именно для этой группы создание интерактивного геймифицированного продукта особо актуально.

1.1.8 Роль разрабатываемого приложения в решении обозначенных проблем.

Создание специализированного интерактивного приложения с элементами геймификации для изучения художественной литературы позволяет напрямую воздействовать на причины низкой вовлечённости и «формального» подхода к изучаемому предмету. Интеграция игровых механик, таких как прогресс уровня, баллы за выполнение заданий, а также увлекательные мини-игры по мотивам литературных произведений, должны дать ученикам новый инструментарий для освоения и закрепления изучаемого материала.
Приложение нацелено на то, чтобы сформировать у ученика устойчивую внутреннюю мотивацию, а именно не только прочитать фрагмент текста, но и разобрать его смысл, занять лидирующую позицию в общем рейтинге, заработать виртуальные достижения. Параллельно приложение может выступать помощником для учителя, автоматически собирая статистику по выполнению заданий, позволяя отслеживать индивидуальный прогресс школьников, что поспособствует упрощенному выставлению отметок в журнал.
Кроме того, цифровой формат позволяет интегрировать в обучение живые иллюстрации, анимацию, контекстные справки, что облегчает восприятие сложных, устаревших понятий и делает процесс погружения в текст более наглядным и общедоступным в пределах школьной скамьи. Всё это должно в комплексе повысить актуальность предмета и поспособствовать формированию грамотного, читающего поколения.

1.2	Анализ существующих решений и их сравнительная характеристика.

Разрабатывая новое приложение для изучения литературы, особенно с учётом геймификации и ориентации на школьников, невозможно просто проигнорировать те платформы и сервисы, которые уже есть на рынке. Многие из них по-своему интересны и у них есть серьёзные плюсы, но и недостатков тоже хватает – в реальной практике о них часто спотыкаются и учителя, и ученики. Так, было решено разобраться, какие подходы сейчас используются для интерактивного изучения литературы в школе, в том числе российские и зарубежные платформы.

1.2.1 Российские образовательные платформы

ЛитРес:Школа.
Это один из самых заметных ресурсов в настоящее время: здесь собрана вся школьная программа по литературе и есть даже аудиокниги, что некоторым ученикам заметно облегчает осваивание содержания текста, но лишь на самом поверхностном уровне. Преподаватели могут давать задания, а ученики – читать книги онлайн или скачивать. Плюсы – огромная библиотека, авторизованный учебный контент, синхронизация с электронными дневниками и даже задания к книгам.
Однако платформа в основном сфокусирована именно на предоставлении доступа к текстам и аудиоверсиям. Из игровых элементов – фактически только виртуальные сертификаты за пройденные тесты. Мини-игр нет, рейтинги работают только в корпоративных версиях для школ. Интерфейс удобный, адаптирован для детей, но, если ищешь что-то ярко интерактивное, то на этой платформе будет скучно для подавляющего числа школьников.
ЯКласс
Он служит в качестве универсальной образовательной платформы для разных предметов – здесь есть тренажёры, тесты, задачи, а также каждый обучающийся может ознакомиться с теоретическим материалом. Литература представлена с неплохим набором викторин и тестовых заданий по темам уроков. У ученика нет мотивации на выполнение заданий и еще формируются рейтинги по классу.
Интересный факт, что задания на этой платформе представлены в более интересной форме. Однако всё равно большую часть времени ученик решает тесты по типу ЕГЭ, а не играет. Хоть тут и геймификации немного больше, чем у ЛитРес, но мини-играми это назвать сложно. Интерфейс не самый удобный, так как при использовании приложения с телефона он кажется слишком перегруженным.
Российские электронные учебники (РЭШ, Бином и др.)
Большое количество школ пользуется бесплатными электронными учебниками. Чаще всего это просто сканы бумажных версий с небольшим количеством интерактивных ссылок, иногда встречаются тесты, где обучающиеся могут проверить свои знания. Обычно обучающий материал здесь мало чем отличается от обычных бумажных книжек, и довольно редко встречаются даже намёки на геймификацию.

1.2.2 Зарубежные платформы и приложения

Здесь важно упомянуть, что использование зарубежных платформ в целом нежелательно. По моему мнению, на сегодняшний день – важно изолироваться от внешних факторов и использовать только собственные наработки и налаживать процесс импортозамещения. Таким образом, мы сможем убедиться как в информационной безопасности платформы, так и сможем регулировать и адаптировать её под современные тенденции и реалии нашей страны.
Quizlet
Эта платформа очень популярна для изучения терминов, языков, дат и всего, что можно вынести на карточки. Теоретически, литературу здесь тоже можно учить, если делать карточки с именами героев или важными цитатами. Преимущество этого приложения заключается в том, что оно бесплатное.
В этом случае обучающиеся не погружаются в смысл литературного текста – здесь ученики не проведут аналитику глав, не смогут полноценно погрузиться в обсуждения. Никаких мини-игр по мотивам книг не предусмотрено.
Duolingo
Да, это не платформа по литературе как таковой, а приложение для изучения языков, но многие его находят как пример грамотной геймификации. Уроки строятся как прохождение уровней, есть жизни, достижения, зелёная сова следит за прогрессом, а каждую неделю идет соревнование между пользователями. Если бы что-то подобное применили для литературы, то можно было бы повысить интерес обучающихся к процессу ее изучения.
Stepik и Coursera
На этих платформах можно найти отдельные курсы или лекции по литературе, а также есть тесты, иногда видеоуроки и форумы. В Stepik есть простейшие достижения за выполнение серии заданий, но обширной геймификации как таковой нет. Чаще всего Coursera пользуются более взрослые люди (студенты вузов), поэтому школьникам может быть трудно или непонятно как пользоваться этой платформой.

1.2.3 Таблица сравнения

Чтобы не запутаться и увидеть картину наглядно, были сведены ключевые аналоги в одну таблицу и по основным критериям было осуществлено сравнение подходов к изучению литературы литературы.
Таблица 1.2 – Сравнение доступных платформ для обучения.
Название	Геймификация	Мини-игры	Интерактивность	Поддержка ФГОС	Русский язык	Адаптация под школу	Стоимость
ЛитРес:Школа	+	-	+	+	+	+	Условно бесплатно
ЯКласс	++	-	++	+	+	+	Платно/Демо
Quizlet	++	-	++	-	+	-	Условно бесплатно
Duolingo	+++	-	+++	-	-	-	Условно бесплатно
Stepik	+	-	++	-	+	-	Платно/Бесплатно
(“+” – есть, “-” – нет, “++” – выражено хорошо, “+++” – отличный уровень)

1.2.4 Основные недостатки рассмотренных решений

Теперь хотелось бы рассмотреть недостатки решений приведенных выше:
Слабая поддержка глубокой геймификации: почти во всех системах есть баллы и достижения, но нет полноценной сюжетной или сюжетно-игровой составляющей – играешь, а не просто решаешь тест.
Нет интеграции мини-игр: ни одно из рассмотренных решений не имеет составляющих, которые бы смогли привлечь обучающихся.
Ограниченная поддержка учителя: контролировать отметки учеников довольно проблематично в представленных предложениях, так как представляют себя примитивными наработками, которыми не всегда может быть удобно пользоваться учителю.
Мало визуала и интерактива: за исключением Duolingo и частично ЯКласс, большинство платформ перегружено текстом и таблицами, которые могут оказаться не слишком понятными для обучающихся, особенно если изучение данных таблиц производится без помощи учителя или его объяснения.
Ограниченное соответствие российской школьной программе: это очень сильно заметно у зарубежных платформ; часто приходится подстраивать под себя.
Платные функции: в подавляющем большинстве сервисы «прячут» интересные и познавательные тесты, мини-игры под ежемесячной платной подпиской, которая может оказаться не по карману ни школьникам, ни их родителям.

1.2.5 Вывод: почему существующие решения не закрывают все потребности

В целом, для учителя и ученика варианты есть, и часто ими даже пользуются. Но если задача — вовлечь современного школьника, который ежедневно играет в Roblox или Minecraft, одних баллов, тестов и электронных книг уже мало. Почти нигде нет настоящей интеграции с мини-играми по сюжетам, игровых квестов, прогресса и достижений так, как это реализовано, например, в игровых платформах. Под российскую школьную программу, в которой требуются конкретные знания по списку произведений, адаптировано не так много сервисов как хотелось бы как учителям, так и современным школьникам.
В итоге получается, что на рынке много предложений, которые покрывают только половину задачи, но мало кто соединяет всё вместе: российскую школьную литературу, умный автоматический контроль, мотивацию через геймификацию, индивидуальный прогресс и квесты/бонусы за каждую пройденную главу. Дополнительно, несмотря на присутствующие возможности в зарубежных сервисах, их использование всё равно недопустимо в соображениях безопасности.  Именно эти пробелы и есть поле для создания действительно нового и современного продукта, о котором пойдёт речь в следующих разделах.

1.3	Обоснование необходимости разработки нового приложения

Несмотря на кажущуюся насыщенность рынка учебных платформ, реальная обратная связь от учителей и школьников говорит о том, что действительно "рабочих" инструментов всё ещё не хватает. Приложения и сервисы, о которых шла речь выше, отчасти выполняют свои функции, но редко дают тот уровень вовлечения, которого ждёт современное поколение школьников. Попробую систематизировать, зачем вообще нужно разрабатывать что‑то новое и что такого особенного может быть в проекте с геймификацией, ориентированной на литературу.

1.3.1	Чего не хватает существующим решениям (Анализ "белых пятен")

Во‑первых, большая проблема — нестыковка между классно-урочной системой и реальным цифровым поведением подростков. Почти все существующие решения "заточены" либо на проверку знаний (тесты, викторины), либо на формальный доступ к книгам. Получается, что тот же ЛитРес:Школа или ЯКласс фактически меняет бумажный учебник на электронный, но любой старшеклассник вам скажет, что формат "прочитай-перескажи" в любом виде остаётся скучным.
Во‑вторых, игровые механики реализованы либо в формате "наградок" (нарисовал значок за прохождение стадии — вот твой жетон), либо вообще отсутствуют. Это не то, что затягивает в процесс: ведь привычные игровые приложения строятся на других принципах — они дают динамику, интерактивность, понятный прогресс и постоянное вовлечение через новые события и загадки. В литературных платформах же часто всё сводится к скучным тестам "выбери правильный ответ".
В‑третьих, стоит отдельно обрести внимание на тему безопасности. Многие зарубежные учебные сервисы либо уже заблокированы, либо их использование официально "не рекомендуется" в РФ, особенно если есть хранение пользовательских данных или доступ к сервисам через иностранные серверы. Даже если технически учитель и может дать доступ к Quizlet или Duolingo, школы и родители чаще всего заинтересованы, чтобы платформа работала в рамках российского законодательства и ФГОС, а цифровые данные не уходили зарубеж.
Кроме того, почти ни одна из имевшихся платформ не интегрирует реальные главы школьных хрестоматий с “проживанием” их через мини-игры, квесты или сюжетные задания. Получается, что ученик буквально "листает страницы", а не проживает историю героев или не решает задачи литературных персонажей — как это завлекает, например, сюжетная игра или квест.

1.3.2	Какие задачи берёт на себя новое приложение

Потенциально новая платформа может закрыть целый комплекс задач как для самих школьников, так и для учителей. Вот как это видится:
Для школьников:
Погружение в литературу в привычном для современных подростков формате: вслед за прохождением главы появляется конкретное задание — например, разыграть сцену, пройти мини-игру или найти в тексте нестандартные смыслы, решая квест.
За счёт геймификации формируется мотивация на уровне привычных “игр”: за каждую активность начисляются баллы, можно открывать новые уровни, получать достижения и сравнивать свой прогресс с друзьями.
Постоянное визуальное сопровождение. Например, страница главы работает не только как текстовый фрагмент, но и как интерактивный “уровень”: появляются иллюстрации, подсказки, ссылки на контекстные материалы, карты героев и мини-игры, связанные с событиями книги.
Для учителей:
Видна подробная "аналитика" по каждому ученику: кто какой материал прошёл, сколько баллов набрал, какие задания выполнил хорошо, а где допустил ошибки.
Можно выдавать индивидуальные задания, контролировать разные темпы изучения, делиться тематическими тестами и задавать дополнительный интерактив (например, проект или онлайн-обсуждение).
Система автоматически формирует отчёты и облегчает сбор данных для диагностики и отчётности.
Для родителей:
Можно отслеживать успехи и активность детей, видеть, что на самом деле происходит в учебном процессе, где именно он "застревает".
Безопасная среда — все данные хранятся на российских серверах, полное соответствие требованиям школы и законам РФ.

1.3.3	Почему геймификация работает (обоснование эффективности подхода)

За последнее десятилетие геймификация стала реальным трендом в образовании. Если раньше считалось, что игры только отвлекают от учёбы, то сейчас, напротив, крупные платформы вкладывают миллионы долларов в "игровые сценарии" внутри образовательных сервисов. Даже государственные программы в ряде стран экспериментируют с такими подходами.
Эксперименты, проводившиеся в школах и вузах, показывают: введение игрового прогресса, наград, даже символических рейтингов и квестов значительно увеличивает показатели вовлечённости и самостоятельной работы учеников. Особенно это видно на тех предметах, где обычно сложно "проконтролировать" самоучёбу: на литературе, истории, социальных дисциплинах. Появление “мини-вызовов”, новых “уровней”, сюрпризов (например, “открой секретный факт о герое”) — реально работает даже у тех, кто был пассивен.
В западных статьях и российских публикациях можно встретить исследования, доказывающие рост мотивации и среднего балла после внедрения даже простейших элементов игр. Особенно это касается подростков 13-16 лет: им действительно важна возможность не только слышать “ты молодец”, а видеть “о, у меня плюс 500 очков, я в топе недели”.

1.3.4	Примеры успешных внедрений геймификации в образовании

Было бы странно утверждать, что всё это не пробовали делать раньше — примеры внедрения подобных систем уже есть. В ряде школ Москвы, Санкт-Петербурга и других крупных городов с 2019 года внедрялись электронные дневники с внутренними ачивками, рейтингами и еженедельными “челленджами”. По результатам, доля тех, кто хотя бы раз дополнительное задание выполнил добровольно “ради интереса”, выросла примерно на 25%.
В рамках индивидуальных образовательных траекторий (ИОТ) часть российских школ уже использует айти-решения, в которых ученики движутся по сюжету, собирают баллы, формируют своё портфолио и даже “прокачивают” скиллы в соответствии с интересами. Но до полноценных мини-игр по мотивам школьных текстов — пока никто не дошёл. И тем более — до квестов прямо внутри по главе литературного произведения.

1.3.5	Вывод о необходимости собственного приложения

Перечисленные выше недостатки, а также реальные запросы целевой аудитории однозначно показывают: есть смысл разрабатывать новый образовательный продукт, который
адаптирован под российскую школьную программу;
работает законно и с сохранением конфиденциальности данных;
даёт доступ не просто к текстам/тестам, а к полноценному “игровому” освоению темы — с прогрессией, рейтингами, мини-играми и квестами;
помогает учителю и родителям видеть индивидуальный маршрут каждого школьника.
Геймифицированные образовательные инструменты — это не только современный тренд, а уже почти стандарт в обучении для новой цифровой школы. Без подобных продуктов мы рискуем дальше наблюдать ежегодное “падение интереса” и “обязательное чтение только по списку”, что означает для литературы постепенное превращение в скучный и формальный предмет.
Правильная платформа должна не только облегчать контакт ученика с текстом, но и делать этот процесс эмоциональным, невероятно интересным, плюс давать вариативность и свободу испытывать себя в обучении. Вот почему работа над таким приложением крайне актуальна.

1.4	Анализ и выбор инструментальных средств разработки

1.4.1 Почему выбор инструментов критичен для учебного ПО

Один из факторов успеха любого современного программного продукта — грамотный, взвешенный выбор стека технологий. В случае образовательного приложения с геймификацией задача осложняется особенными требованиями:
Безопасность использования и хранения данных учеников,
Поддержка кроссплатформенной работы (школы используют самые разные ПК, бывают старые ноутбуки, может понадобиться и веб-доступ),
Возможность интеграции интерактивных визуальных компонентов, мини-игр,
Масштабируемость в случае роста числа пользователей,
Простота поддержки и доработок (в том числе сила сообщества, количество примеров, качество русскоязычной документации),
Устойчивость работы на слабом железе и оффлайн-доступ.
Проигнорируй хотя бы два пункта — и вместо крутого полезного продукта получится проект, “работающий только у некоторых” или быстро морально устаревающий.
Поэтому перед выбором конечного пути разработки я подробно сравнил все доступные популярные технологии и подходы, учитывая прежде всего реальное применение, мой опыт, отзывы и кейсы в образовательной среде.

1.4.2 Фронтенд: сравнение фреймворков и выбор

Причины тщательного выбора
На фронтенд ложится абсолютное большинство UI/UX-зависимых задач. Для приложения с интерактивностью (та же геймификация, уровни, анимация прогресса, мини-игры, динамические главы, рейтинги) нужен мощный и гибкий подход — иначе поддерживать и развивать со временем будет невозможно.
Разбор популярных фреймворков
ReactJS
— Самый массовый и “живой” фреймворк, большую часть крупных корпоративных интерфейсов в мире пишут именно на нём.
— Отлично подходит для компонентной архитектуры. Можно делить большие экраны на логические модули, переиспользовать, расширять или заменять своё.
— Отлично интегрируется с TypeScript, библиотеками визуализации, redux/mobx для хранения состояния.
— Практически у любого модуля, виджета, подключения есть пример на гитхабе.
— Еще один плюс — море русскоязычной документации, статьи, комьюнити, опытных разработчиков легко найти по России.
Vue.js
— Лёгкий, компактный и часто хвалимый за “легкость вхождения”, но по масштабируемости и “крутости” UI ближе к React только у свежих мажорных релизов.
— Очень неплох для быстрого прототипирования, но для сложных платформ (особенно с мультимедией, WebGL и интеграцией внешних компонентов) иногда не хватает гибкости.
— Некоторые сторонние расширения сложно найти (например, под спецэффекты или синхронизацию с Unity), да и тяжелых образовательных проектов на Vue заметно меньше. Для учебных сайтов — ок, для десктоп-приложения с играми — менее часто встречается.
Angular
— Подойдёт для огромных корпоративных проектов (он в крупных банках очень часто встречается), зато заметно тяжелее по порогу вхождения.
— Огромная экосистема, жёсткая архитектура (это плюс и минус одновременно).
— Хорошо для больших команд, либо если уже есть сильный опыт именно с Angular.
— С точки зрения интеграции “мелких” функций или игр через WebGL не сказать что проще, чем в React.
Вывод по фронтенду
В итоге под такой проект (и под мои навыки тоже) разумнее всего выбрать React:
— легко развивать;
— супер много готовых UI-компонентов, нравится структура;
— просто интегрируется с внешними плагинами и WebGL;
— будет адекватно поддерживать не только образовательную часть, но и игровые механики (ProgressBar, анимации переходов, динамичные списки достижений).
Vue — хороший выбор для маленьких систем и быстро набирает популярность, но для десктоп-платформы и долгосрочного развития опыта у него пока не так много.

1.4.3 Языки программирования: JS, TypeScript, C#

JavaScript
Базовый must-have для фронтенд‑разработки почти на любом из популярных фреймворков. Даже если что-то пишется на TypeScript, в итоге он компилируется в JavaScript.
Плюсы — простота, огромное сообщество, море готовых решений. Минусы — не строгая типизация, которая иногда ведет к неприятным багам и ошибкам.
TypeScript
Overhead по сравнению с JS небольшой, а пользы при большом проекте — намного больше. Это строго типизированный “надстройка” для JavaScript, даёт мощный контроль ошибок на этапе компиляции; Делает командную разработку безопаснее и понятнее. Если функционал разрастается до сотен компонентов (то самое приложение: главы, мини-игры, различные типы заданий, регистрация), код всё равно останется читаемым и предсказуемым.
Минус — чуть круче кривая обучения для новичка (но это вообще не проблема, если заниматься такими проектами).
C# и Unity
Для создания и интеграции мини-игр (WebGL) используется C# в связке с Unity. Unity — хорош для быстрого прототипирования и выпуска готовых форматов мини-игр, в том числе в WebGL для вставки прямо в страницу приложения (через iframe или виджет).
Плюс C# в связке с Unity — быстрая работа, куча документации интеграции с JS через WebGL, низкий порог для повторной правки.
Выбор по языкам
Фронтенд и бизнес-логика: TypeScript/JavaScript. Интерактивные мини-игры внутри приложения (WebGL): C# (через Unity). В сочетании этот стек легко интегрируется через iframe или специальные плагины в рамках десктоп-приложения.

1.4.4 Десктоп-платформа: Electron, Tauri, PWA, нативное приложение

Electron
То, что Electron использует движок Chromium, — это двойной плюс: и передача современных веб-технологий, и широкая поддержка форматов мультимедиа, включая и звуки, и анимацию, и встраиваемое видео. В моём случае очень важно именно это: WebGL-игры и интерактивные элементы, сделанные в Unity, встраиваются почти «в один клик», поддержка соответствует документации Unity. В процессе прототипирования я сравнил даже работу интеграции мини-игры в Electron и в других фреймворках — короткий тест показал, что в Electron каких-либо серьёзных «глюков» с отображением или производительностью нет. Кроме того, если потребуется добавить «прямую» работу с файловой системой компьютера, Electron делает это через свой API довольно просто, что для PWA или просто браузерной версии недоступно.
Из недостатков хотелось бы отметить не только больший размер дистрибутива, но и иногда повышенное потребление памяти на слабых машинах (особенно старых ноутбуках или ПК). Тут приходится искать баланс между функционалом приложения и его «тяжеловесностью», но на практике в школах сейчас даже старые ПК чаще всего тянут Chromium.
Плюсы:
1)	Стандартизирован, много туториалов и готовых boilerplate-проектов, активное сообщество на русском языке;
2)	Приложение по сути — полноценный веб-сайт, упакованный как десктопное, что удобно для быстрой интеграции визуальных и интерактивных модулей (в том числе unity/webgl);
3)	Совместим со всеми ведущими ОС (Windows, macOS, Linux);
4)	Меньше проблем при подключении сторонних модулей или open source-инструментов (растет сообщество, море npm-библиотек);
5)	Webview на базе Chromium — никаких заморочек, как выглядит приложение, у всех пользователей будет одинаково.
Минусы:
1)	Вес приложения больше (базовый electron-продукт — уже 70-100 МБ);
2)	В ресурсоёмких задачах (супер-большие анимации, десятки webgl-игр одновременно) платформа чуть нагружает процессор;
3)	Чуть сложнее делать auto-update и контроль версий на практике, если не использовать сторонние решения;
Главное — легко интегрировать WebGL с Unity прямо внутрь без сильных хаков. Это из практики почти самое важное!
Tauri
С этой платформой я экспериментировал дольше, потому что она на слуху как модный конкурент Electron, обещающий меньший размер, большую безопасность и заметно меньшее потребление ресурсов. Теоретически, Tauri такой же конструктор десктопных приложений на веб-технологиях, но на практике оказалось несколько нюансов:
Tauri не использует встроенный Chromium, а рендерится через нативный движок операционной системы (WebView). За счёт этого приложение весит действительно меньше, и на относительно слабых машинах грузится быстрее.
Но именно из-за «нативного» рендеринга возникают сложности с интеграцией новых или нестандартных web-технологий. Например, встраиваемые WebGL-приложения, собранные в Unity, могут отображаться иначе — не везде поддерживается всё, что заявляет Chromium. На документацию приходится полагаться меньше, особенно если сталкиваешься с интеграцией чего-то нестандартного.
В ряде случаев срабатывают неожиданные баги у разных ОС: WebGL-игра видна на Windows, а на старом MacOS или определённом варианте Linux выглядели артефакты, причём русскоязычной поддержки мало и решения часто приходится искать «методом тыка».
Ещё одна сложность, что Tauri моложе, готовых инструкций и кейсов на русском ощутимо меньше. Сообщество всё ещё формируется, эксперименты с большими системами типа моего приложения в основном англоязычные — это реально затык для решения сложных интеграций на практике.
Вывод: Tauri, безусловно, перспективная платформа, особенно если нужен лёгкий мини-софт без тяжёлых визуальных элементов или когда ресурсы компьютера крайне ограничены (например, очень старые ПК). Для сложного мультимедийного приложения с интерактивом и Unity/WebGL-интеграцией — это пока что «слепая зона» с большой вероятностью непредсказуемых багов и архитектурных затыков. Да, можно «додавить», но для продуктивной разработки на четвёрку или пятёрку — Electron надёжнее на сегодня.
PWA (Progressive Web Application)
PWA — это способ делать приложения, которые работают как мобильные и десктопные (почти) полноценно, но запускаются прямо из браузера, могут устанавливаться на рабочий стол, имеют офлайн-режим и доступ к части локальных ресурсов.
Плюсы:
1)	Устройство-платформа не важны — приложение работает на любом устройстве с браузером;
2)	Не надо скачивать отдельный инсталлятор — достаточно открыть ссылку и «установить» на рабочий стол;
3)	Простота обновлений: все пользователи используют единую актуальную версию.
Минусы и ограничения для моего проекта:
1)	PWA имеет заметные границы функционала — из-за ограничений безопасности браузера, низкого уровня доступа к файловой системе, аппаратуре, интеграции с Windows/MacOS/Linux API (например, сторонние драйверы, аппаратное декодирование видео).
2)	Нет гарантированной поддержки встраиваемых Unity/WebGL-игр: в некоторых браузерах/устройствах такие игры блокируются или их производительность серьёзно просаживается.
3)	«Глубокий» оффлайн-режим реализовать сложно — возможны перебои при попытке загрузить большие учебные материалы, мини-игры, медиа.
По итогу можно сделать такой вывод: если делать простое учебное приложение для чтения, PWA — очень удобный вариант, особенно для платформы школьная библиотека. Если нужны серьёзные интерактивные компоненты с тяжёлыми библиотеками (WebGL, Unity), PWA быстро утыкается в технические ограничения (вопросы безопасности браузера, ограничения на кэширование, лимит производительности).
По ряду учебных задач — инструмент классный, под мою задачу — скорее нет.
Нативные приложения (на C++, C#, Java, Swift и др.)
Самый "классический" способ — это взять мощный язык программирования, типа C#, Java, C++ (или под Mac — Swift/Objective-C), и сделать приложение «под каждую систему».
Плюсы:
1)	Максимальный уровень доступа к возможностям устройства, ускоренное взаимодействие с файлами, сетью, аппаратурой;
2)	Высокая производительность (особенно на старом железе — нативные движки почти всегда быстрее);
3)	Можно реализовать любую архитектуру, любые нестандартные решения.
Минусы:
1)	Крайне высокая стоимость поддержки и разработки: под каждую платформу нужно отдельное приложение или минимум отдельные обвязки (например, под Windows и под Mac);
2)	Слабая кроссплатформенность — обновлять, тестировать и фиксить приходится каждую версию отдельно;
3)	Сложности при интеграции современных web-технологий — надо либо тянуть в проект движок типа Chromium (то есть делать «обёртку как у Electron» своими руками), либо заново писать модули для игр, встроенных браузерных окон и видеоплееров;
4)	Меньше гибкости: поменять бизнес-логику, вёрстку, новую фичу добавить технически сложнее (нужно перекомпилировать целый проект).
В контексте учебного приложения:
Здесь критически важны быстрая поддержка, единая кодовая база (иначе поддерживать и тестировать становится почти невозможно), массовый запуск на разнородной технике (слабое железо в школах, разные ОС, быстро устаревающие ноутбуки). Классическая нативная разработка — это гарантия, что ничего “не отвалится”, но цена поддержки и вывода каждой новой функции слишком высока даже для крупных команд, а для студенческого или энтузиастского проекта — практически не реальна.
Таблица 1.3 – Сравнение платформ для реализации веб приложения
Критерий	Electron	Tauri	PWA	Нативное приложение
Кроссплатформенность	Да, все ОС	Да, все ОС	Да (браузеры)	Нет, для каждой ОС отдельно
Размер	80-100 МБ+	8-20 МБ	0	Сильно различается
Интеграция WebGL	Простая и стабильная	Сложности, баги	Ограниченно	Сложная
Обновления	Средней сложности	Нетипично	Просто	Очень сложно
Документация и поддержка	Очень много	Мало	Неактуально	Довольно старая
Производительность	Средняя	Хорошая	Плохая	Отличная
Время на внедрение	Среднее	Медленно	Среднее	Очень медленно
Сообщество	Огромное	Всё еще растет	Маленькое	Довольно узкое
Интеграция мультимедиа	Высокая	Средняя	Ограничено	Максимальная,но очень сложная

Из этой таблицы можно сделать определённый вывод: с учётом целей моего проекта, лучше всего подойдет использование Electron. Он не самый «Лёгкий», но побеждает за счёт большой базы и совместимости с необходимыми функциями веб приложения. Остальные окажутся либо слишком «дорогими» и тяжёлыми, либо нестабильными и неактуальными.

1.4.5 Интеграция Unity/WebGL: технические решения, подводные камни, опыт тестовой реализации.

Этап внедрения мини-игр и интерактивных уровней из Unity в десктоп-приложение — один из самых технологически сложных, если не предусмотреть это изначально. Перед выбором платформы я экспериментировал с разными способами интеграции Unity-мини-игр (а это отдельная тема, которой посвятил несколько дней практики и чтения форумов).
Unity позволяет собирать проект в WebGL-бандл (по сути, это HTML/JavaScript-приложение с ссылкой на ассеты и движок), который затем можно открыть в браузере или внедрить в любой webview через iframe либо через отдельный javascript-обёртку.
Для Electron:
Можно встроить WebGL-игру как отдельный экран приложения (иногда даже как popup/отдельное окно — это удобно для “бонусных” заданий);
Поддержка Unity WebGL стабильна: проверял как статически (примеры на официальном сайте Unity), так и на мини-уровнях, собранных самостоятельно;
Из плюсов — нет особых ограничений по обращениям к файловой системе приложения: игре можно “скармливать” локальные ассеты, запоминать локальный прогресс, вынести сохранения в отдельный кэш; По отзывам сообщества, если возникают баги, решение чаще всего уже найдено или подробно расписано (Electron живее всего по части сценариев “игра внутри десктопа”).
Для Tauri:
Технически тоже можно интегрировать WebGL, но лично столкнулся с неприятными артефактами рендеринга на Windows и нестабильностью на macOS;
Быстро обнаружил, что мелкие “патчи” для поддержки Unity нужно искать буквально на англоязычных форумах, либо подписываться на сторонние плагины, которых ещё мало; С управлением “разговором” между webview и логикой самого приложения — ещё сложнее, особенно если нужно передавать данные о прогрессе или статистику запуска мини-игры обратно в основную систему.
Для PWA:
Можно “встраивать” только если пользователь работает в современном браузере с полной поддержкой WebGL;
В реальности мобильные браузеры блокируют часть API, а десктопные иногда “бросают” пользовательский прогресс, когда пользователь резко закрывает вкладку или уходит в оффлайн;
Для нативных приложений:
На C#/WPF или иных “больших” технологиях — придётся либо embed’ить весь Chromium как отдельный слой (существенное усложнение разработки), либо подключать Unity как отдельный runtime (что по весу и сложности убивает все плюсы “нативности”).
Именно благодаря Electron интеграция оказалась простой и не требовала сложных обходов или “костылей”. Ознакомившись с аналогичными решениями (есть даже кейсы коммерческих образовательных игр для школ на Electron и Unity), убедился, что на сегодняшний день альтернативы по удобству/стабильности эта связка не имеет. Unity/Chromium-команда быстро выпускает обновления под современные браузеры, поэтому с совместимостью на Electron серьёзных проблем не предвидится в обозримой перспективе.

1.4.6 Базы данных

Основные требования к серверной СУБД:
1)	Масштабируемость: должна справляться с ростом числа пользователей и объёмом данных без падения производительности;
2)	Поддержка работы в реальном времени: т.к. прогресс, задания и игровые события обновляются сразу для многих пользователей;
3)	Гибкая структура: приложение по мере развития будет меняться, и структура хранимых данных — тоже;
4)	Простота интеграции с современными backend-фреймворками (Node.js, .NET, Python и т.п.);
5)	Безопасность данных: поскольку хранятся личные данные школьников, нужна простая ролевая модель, резервное копирование;
6)	Документированность и поддержка сообществом.
Сравнение кандидатов
PostgreSQL (реляционная СУБД):
1)	Отлично подходит для сложных структурированных данных;
2)	Поддерживает транзакции, сложные запросы, индексацию;
3)	Есть расширения для работы с JSON, что полезно для хранения гибких “наборов данных” (например, индивидуальный прогресс);
4)	Легко масштабируется при помощи репликаций, поддерживается практически всеми серверными фреймворками;
5)	Открытое ПО с активным комьюнити, хорошо задокументировано;
6)	Подходит и для России — можно установить на свои сервера без юридических проблем.
MongoDB (NoSQL, документно-ориентированная):
1)	Ориентирована на гибкость структуры: данные сохраняются в виде документов, не нужно проектировать жёсткую схему;
2)	Хорошо подходит для образовательных платформ, где разные задания, уровни и достижения могут отличаться по составу;
3)	Масштабируется горизонтально, есть встроенная поддержка шардинга;
4)	Отличная интеграция с Node.js (одна из самых популярных связок для веб-приложений);
5)	Поддерживает хранение больших вложенных объектов (например, целый “портфель” ученика с прогрессом по всем книгам);
MySQL/MariaDB (реляционные):
1)	Старожилы рынка, быстрые, простые в установке;
2)	Много решений для бэкапов, миграций;
3)	Интеграция с Node.js тоже хорошая;
Но сейчас другие проекты чаще используют современные варианты (PostgreSQL или MongoDB) из-за большей гибкости и поддержки JSON-полей.
Redis (ин-мемори серверная NoSQL):
Используется обычно как кэш, брокер сообщений, реже — в качестве основной базы для долговременного хранения (может стать плюсом в связке с другой СУБД, планировать как “ускоритель” чатов и мини-игр).
С учётом задач и необходимости гибко хранить разные сущности, самым оптимальным вариантом представляется MongoDB.
Для образовательной платформы, где структура данных часто меняется, и для внедрения геймификации документно-ориентированная модель MongoDB проще и надёжнее.
Множество готовых open-source решений для интеграции с Node.js и даже с прямыми push-уведомлениями (“живое” обновление состояния без перезагрузки экрана).
Нет привязки к сложной реляционной схеме, можно быстро экспериментировать и наращивать функциональность.
Для запуска и администрирования доступны бесплатные версии (сообщество большое, много русскоязычных материалов).
Можно со временем перейти к гибридной модели (главная часть данных в MongoDB, самые важные отчёты — дублировать в PostgreSQL или использовать внешние BI-сервисы).
MongoDB легко интегрируется с системами аутентификации по JWT-токену (или авторизация по протоколу OAuth для удобства интеграции с электронными дневниками/школьными ERP), поддерживает обязательное шифрование данных на сервере и строгую ролевую модель, что важно для работы с персональными данными школьников по российским законам.
Основная серверная база данных для моего приложения — MongoDB. Это современно, гибко, легко масштабируется и идеально подходит под архитектуру, схожую с Discord: множество типов данных, событий и динамичное обновление контента у всех пользователей.
 
Заключение
Таким образом, был проведен анализ предметной области, требований и задач для реализации приложения. В ходе работы удалось изучить много интересной и важной информации, которая позволила направить курс разработки в нужное направление. В особенности это помогло мне определиться с техническими требованиями и востребованности этого решения на рынке в целом. 
	Впереди меня ожидает полноценная разработка, отладка и тестирование. Можно сделать вывод, что существующие решения не позволяют решить проблему вовлеченности детей в процесс обучения, что означает, что работа в этом направлении необходима. Аналогичные сервисы либо не дают нужного функционала, либо недоступны в России или же платные в использовании, что недопустимо для школьников.






















Список использованной литературы
1.	ЛитРес:Школа. — Официальный образовательный портал. [Электронный ресурс]. URL: https://school.litres.ru (дата обращения: 04.04.2025).
2.	ЯКласс. Образовательная платформа для школ. [Электронный ресурс]. URL: https://www.yaklass.ru (дата обращения: 05.04.2025).
3.	Stepik. Онлайн-курсы для школьников и студентов. [Электронный ресурс]. URL: https://stepik.org (дата обращения: 06.04.2025).
4.	Quizlet — Учёба через флеш-карточки. [Электронный ресурс]. URL: https://quizlet.com/ru (дата обращения: 09.04.2024).
5.	Duolingo: Учим языки играючи. [Электронный ресурс]. URL: https://www.duolingo.com (дата обращения: 09.04.2025).
6.	Детство без книжки: подростки в России стали еще меньше читать. // Ведомости. — 16.09.2022. [Электронный ресурс]. URL: https://www.vedomosti.ru/society/articles/2022/09/16/941088-podrostki-stali-menshe-chitat (дата обращения: 11.04.2025).
7.	Каждый четвёртый подросток в России вообще не читает книг. // ТАСС. — 13.09.2022. [Электронный ресурс]. URL: https://tass.ru/obschestvo/14734567 (дата обращения: 13.04.2025).
8.	40 процентов учащихся читают книги из школьной программы только в кратком пересказе. // Российская газета. — 15.07.2024. [Электронный ресурс]. URL: https://rg.ru/2024/07/15/40-procentov-uchashchihsia-chitaiut-knigi-iz-shkolnoj-programmy-v-kratkom-pereskaze.html (дата обращения: 16.04.2025).
9.	63% подростков не читают современную литературу. // Год Литературы. — 05.02.2025. [Электронный ресурс]. URL: https://godliteratury.ru/articles/2025/02/05/63-podrostkov-ne-chitaiut-sovremennuiu-literaturu (дата обращения: 19.04.2025).
10.	Федеральный государственный образовательный стандарт основного общего образования (ФГОС ООО): утвержден приказом Минобрнауки России от 31.05.2021 № 287. — [Электронный ресурс]. URL: https://fgos.ru/fgos/fgos-ooo/ (дата обращения: 24.04.2025).

